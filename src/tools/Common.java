package tools;

public class Common {
	public static int[][] BLOBSUM40 = {
		{5,-2,-1,-1,-2,0,-1,1,-2,-1,-2,-1,-1,-3,-2,1,0,-3,-2,0,-1,-1,0,-6},
		{-2,9,0,-1,-3,2,-1,-3,0,-3,-2,3,-1,-2,-3,-1,-2,-2,-1,-2,-1,0,-1,-6},
		{-1,0,8,2,-2,1,-1,0,1,-2,-3,0,-2,-3,-2,1,0,-4,-2,-3,4,0,-1,-6},
		{-1,-1,2,9,-2,-1,2,-2,0,-4,-3,0,-3,-4,-2,0,-1,-5,-3,-3,6,1,-1,-6},
		{-2,-3,-2,-2,16,-4,-2,-3,-4,-4,-2,-3,-3,-2,-5,-1,-1,-6,-4,-2,-2,-3,-2,-6},
		{0,2,1,-1,-4,8,2,-2,0,-3,-2,1,-1,-4,-2,1,-1,-1,-1,-3,0,4,-1,-6},
		{-1,-1,-1,2,-2,2,7,-3,0,-4,-2,1,-2,-3,0,0,-1,-2,-2,-3,1,5,-1,-6},
		{1,-3,0,-2,-3,-2,-3,8,-2,-4,-4,-2,-2,-3,-1,0,-2,-2,-3,-4,-1,-2,-1,-6},
		{-2,0,1,0,-4,0,0,-2,13,-3,-2,-1,1,-2,-2,-1,-2,-5,2,-4,0,0,-1,-6},
		{-1,-3,-2,-4,-4,-3,-4,-4,-3,6,2,-3,1,1,-2,-2,-1,-3,0,4,-3,-4,-1,-6},
		{-2,-2,-3,-3,-2,-2,-2,-4,-2,2,6,-2,3,2,-4,-3,-1,-1,0,2,-3,-2,-1,-6},
		{-1,3,0,0,-3,1,1,-2,-1,-3,-2,6,-1,-3,-1,0,0,-2,-1,-2,0,1,-1,-6},
		{-1,-1,-2,-3,-3,-1,-2,-2,1,1,3,-1,7,0,-2,-2,-1,-2,1,1,-3,-2,0,-6},
		{-3,-2,-3,-4,-2,-4,-3,-3,-2,1,2,-3,0,9,-4,-2,-1,1,4,0,-3,-4,-1,-6},
		{-2,-3,-2,-2,-5,-2,0,-1,-2,-2,-4,-1,-2,-4,11,-1,0,-4,-3,-3,-2,-1,-2,-6},
		{1,-1,1,0,-1,1,0,0,-1,-2,-3,0,-2,-2,-1,5,2,-5,-2,-1,0,0,0,-6},
		{0,-2,0,-1,-1,-1,-1,-2,-2,-1,-1,0,-1,-1,0,2,6,-4,-1,1,0,-1,0,-6},
		{-3,-2,-4,-5,-6,-1,-2,-2,-5,-3,-1,-2,-2,1,-4,-5,-4,19,3,-3,-4,-2,-2,-6},
		{-2,-1,-2,-3,-4,-1,-2,-3,2,0,0,-1,1,4,-3,-2,-1,3,9,-1,-3,-2,-1,-6},
		{0,-2,-3,-3,-2,-3,-3,-4,-4,4,2,-2,1,0,-3,-1,1,-3,-1,5,-3,-3,-1,-6},
		{-1,-1,4,6,-2,0,1,-1,0,-3,-3,0,-3,-3,-2,0,0,-4,-3,-3,5,2,-1,-6},
		{-1,0,0,1,-3,4,5,-2,0,-4,-2,1,-2,-4,-1,0,-1,-2,-2,-3,2,5,-1,-6},
		{0,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,0,-1,-2,0,0,-2,-1,-1,-1,-1,-1,-6},
		{-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,1}
		};
	public static int[][] BLOBSUM62 = {
		{ 4, -1, -2, -2,  0, -1, -1,  0, -2, -1, -1, -1, -1, -2, -1,  1,  0, -3, -2,  0, -6},
		{-1,  5,  0, -2, -3,  1,  0, -2,  0, -3, -2,  2, -1, -3, -2, -1, -1, -3, -2, -3, -6},
		{-2,  0,  6,  1, -3,  0,  0,  0,  1, -3, -3,  0, -2, -3, -2,  1,  0, -4, -2, -3, -6},
		{-2, -2,  1,  6, -3,  0,  2, -1, -1, -3, -4, -1, -3, -3, -1,  0, -1, -4, -3, -3, -6},
		{ 0, -3, -3, -3,  9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -6},
		{-1,  1,  0,  0, -3,  5,  2, -2,  0, -3, -2,  1,  0, -3, -1,  0, -1, -2, -1, -2, -6},
		{-1,  0,  0,  2, -4,  2,  5, -2,  0, -3, -3,  1, -2, -3, -1,  0, -1, -3, -2, -2, -6},
		{ 0, -2,  0, -1, -3, -2, -2,  6, -2, -4, -4, -2, -3, -3, -2,  0, -2, -2, -3, -3, -6},
		{-2,  0,  1, -1, -3,  0,  0, -2,  8, -3, -3, -1, -2, -1, -2, -1, -2, -2,  2, -3, -6},
		{-1, -3, -3, -3, -1, -3, -3, -4, -3,  4,  2, -3,  1,  0, -3, -2, -1, -3, -1,  3, -6},
		{-1, -2, -3, -4, -1, -2, -3, -4, -3,  2,  4, -2,  2,  0, -3, -2, -1, -2, -1,  1, -6},
		{-1,  2,  0, -1, -3,  1,  1, -2, -1, -3, -2,  5, -1, -3, -1,  0, -1, -3, -2, -2, -6},
		{-1, -1, -2, -3, -1,  0, -2, -3, -2,  1,  2, -1,  5,  0, -2, -1, -1, -1, -1,  1, -6},
		{-2, -3, -3, -3, -2, -3, -3, -3, -1,  0,  0, -3,  0,  6, -4, -2, -2,  1,  3, -1, -6},
		{-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4,  7, -1, -1, -4, -3, -2, -6},
		{ 1, -1,  1,  0, -1,  0,  0,  0, -1, -2, -2,  0, -1, -2, -1,  4,  1, -3, -2, -2, -6},
		{ 0, -1,  0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1,  1,  5, -2, -2,  0, -6},
		{-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1,  1, -4, -3, -2, 11,  2, -3, -6},
		{-2, -2, -2, -3, -2, -1, -2, -3,  2, -1, -1, -2, -1,  3, -3, -2, -2,  2,  7, -1, -6},
		{ 0, -3, -3, -3, -1, -2, -2, -3, -3,  3,  1, -2,  1, -1, -2, -2,  0, -3, -1,  4, -6},
		{-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,1}
	};
	public static int[][] TIMMATRIX = {
		{-3,-1,-1,-1,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-1,-3,-1,-1,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-1,-1,-3,-1,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-1,-1,-1,-3,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-1,-1,-1,-1,-3,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-1,-1,3,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,2,2,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,2,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,2,-3,-3,-3,-3,2,-3,-3,2,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,1,-3,-3,1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,2,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,2,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
		{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3}

	};
	public static char[] BLOBSUM40CHAR = {'a','r','n','d','c','q','e','g','h','i','l','k','m','f','p','s','t','w','y','v','b','z','x','*'};
	public static char[] BLOBSUM62CHAR = {'a','r','n','d','c','q','e','g','h','i','l','k','m','f','p','s','t','w','y','v','*'};
	public static char[] TIMMATRIXCHAR = {'a','e','i','o','u','y','v','c','g','h','j','k','q','z','f','x','s','w','f','p','d','*'};//14
	public static int max(int[] arr){
		if(arr.length > 0){
			int max = arr[0];
			for(int i=1;i< arr.length;i++){
				if(arr[i]>max){
					max = arr[i];
				}
			}
			return max;
		}
		else{
			return -9999;
		}
		
	}
	
	public static int min(int[] arr){
		if(arr.length > 0){
			int min = arr[0];
			for(int i=1;i< arr.length;i++){
				if(arr[i]<min){
					min = arr[i];
				}
			}
			return min;
		}
		else{
			return 9999;
		}
		
	}
	
	public static int getCharIndex(char c, char[] arr){
		for(int i=0;i<arr.length;i++){
			if(c == arr[i]){
				return i;
			}
		}
		return arr.length-1;
	}

}
